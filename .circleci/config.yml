# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  print-hello-to-me:
    docker:
       - image: cimg/base:stable

    steps:
      - checkout
      - run:
          name: "Say Hello to"
          command: "echo Print Hello, World!"

  print-hello-to-chuks:
    docker:
       - image: cimg/base:stable

    steps:
      - checkout
      - run:
          name: "Say Hello to Chuks"
          command: "echo Print Hello, Chuks!"

  save_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "Hello Chucks" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  
  print_output_file:
    docker:
      -image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  
  my_env_class:
    docker:
      - image: cimg/base:2020.01

    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $MY_ENV


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say_hello
      - print_hello_to_me
      - print_hello_to_chuks:
          requires:
            - print_hello_to_me
      - my_env_class
      - save_hello
      - print_output_file
      